
trigger:
  - main

pool:
  vmImage: 'macOS-latest'

jobs:
- job: sonar
  displayName: Analyse code with SonarQube

  steps:

  - task: Maven@3
    displayName: 'Build project'
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'clean'



- job: tests
  displayName: Run tests
  strategy:
    maxParallel: 2
    matrix:
      ANDROID:
        PLATFORM_NAME: android
        ANDROID_EMU_NAME: test
        ANDROID_SDK_ID: system-images;android-29;google_apis_playstore;x86

  steps:
  - task: CmdLine@2
    displayName: 'Configure Appium'
    inputs:
      script: |
        echo "Configuring Environment"
        export PATH=$PATH:$JAVA_HOME/bin
        echo export "ANDROID_HOME=\$ANDROID_HOME" >> ~/.bash_profile
        export PATH=$PATH:$ANDROID_HOME
        echo "ANDROID_HOME: ${ANDROID_HOME}"
        echo "JAVA_HOME: ${JAVA_HOME}"
        echo "PATH: ${PATH}"
        echo "Installing Appium"
        npm install -g appium@v1.17.0
        ln -fs /usr/local/lib/node_modules/appium/build/lib/main.js /usr/local/bin/appium
        chmod +x /usr/local/bin/appium
        export PATH=$PATH:/usr/local/bin/appium
        appium --version
        echo "Appium installed"
        echo "Installing and Running Appium doctor"
        npm install -g request@2.34.0
        npm install -g appium-doctor@1.15.1
        ln -fs /usr/local/lib/node_modules/appium-doctor/appium-doctor.js /usr/local/bin/appium-doctor
        chmod +x /usr/local/bin/appium-doctor
        export PATH=$PATH:/usr/local/bin/appium-doctor
        appium-doctor
        echo "Appium doctor installed and executed"
  - task: CmdLine@2
    displayName: 'Configure and start Android emulator'
    inputs:
      script: |
        echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-29;google_apis;x86' 
          echo "AVD system-image successfully downloaded and installed." 
        echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n android_emulator -k 'system-images;android-29;google_apis;x86' -d 10 --force 
          echo "Emulator created successfully $(ANDROID_HOME/emulator/emulator -list-avds), launching it" 
          nohup $ANDROID_HOME/emulator/emulator -avd android_emulator -skin 1080x1920 -no-snapshot -no-audio -no-boot-anim -accel auto -gpu auto -qemu -lcd-density 420 > /dev/null 2>&1 & 
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done' 
          adb root adb shell 'setprop persist.sys.language pt-BR;setprop persist.sys.country BR; stop; sleep 5; start $ANDROID_HOME/platform-tools/adb devices $ANDROID_HOME/tools/bin/avdmanager list device'
    condition: and(succeeded(), eq(variables['PLATFORM_NAME'], 'android'))

  - task: CmdLine@2
    displayName: 'Start Appium server'
    inputs:
      script: |
        appium --allow-insecure chromedriver_autodownload &
        echo "Appium server started"
    condition: succeeded()

  - task: Maven@3
    displayName: 'Run tests'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'test -DisRemote=true -DplatformName=$(PLATFORM_NAME)'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false
    condition: succeeded()